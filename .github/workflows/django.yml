name: Web Application Server - DEV CI/CD

on:
    push:
        branches: ["develop"]
    pull_request_target:
        types: [labeled, closed]

jobs:
# safe tag에 대한 gradlew test && merged에 대한 docker image build and push
  CI:
    if: contains(github.event.pull_request.labels.*.name, 'safe')
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Create .env
      shell: bash
      run: |
        touch .env
        echo SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }} >> .env
        echo DATABASE_ENGINE=${{ secrets.DATABASE_ENGINE }} >> .env
        echo DATABASE_NAME=${{ secrets.DJANGO_DATABASE_NAME }} >> .env
        echo DATABASE_USER_ID=${{ secrets.DJANGO_DATABASE_USER_ID }} >> .env
        echo DATABASE_USER_PASSWORD=${{ secrets.DJANGO_DATABASE_USER_PASSWORD }} >> .env
        echo DATABASE_HOST=${{ secrets.DJANGO_DATABASE_HOST }} >> .env
        echo DATABASE_PORT=${{ secrets.DJANGO_DATABASE_PORT }} >> .env
        echo DATABASE_SEARCH_PATH=${{ secrets.DJANGO_DATABASE_SEARCH_PATH }} >> .env
        echo SOCIAL_AUTH_GOOGLE_CLIENT_ID=${{ secrets.DJANGO_SOCIAL_AUTH_GOOGLE_CLIENT_ID }} >> .env
        echo SOCIAL_AUTH_GOOGLE_SECRET=${{ secrets.DJANGO_SOCIAL_AUTH_GOOGLE_SECRET }} >> .env
        echo STATEY=${{ secrets.DJANGO_STATEY }} >> .env
        echo SOCIAL_AUTH_KAKAO_CLIENT_ID=${{ secrets.DJANGO_SOCIAL_AUTH_KAKAO_CLIENT_ID }} >> .env
        echo SOCIAL_AUTH_KAKAO_SECRET=${{ secrets.DJANGO_SOCIAL_AUTH_KAKAO_SECRET }} >> .env
        cat .env

    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
            
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip3 install -r requirements.txt
            
    - name: Run tests
      run: |
        python3 manage.py test

    ### Docker Image Build and Push ###
    - name: Login to Docker Hub
      if: github.event.pull_request.merged == true
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
            
    - name: Set up Docker Buildx
      if: github.event.pull_request.merged == true
      uses: docker/setup-buildx-action@v2
                
    - name: Build and push
      if: github.event.pull_request.merged == true
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPONAME }}
  
  # closed에 대한 server deploy
  CD:
    if: github.event.pull_request.merged == true
    needs: [CI]
    
    runs-on: ubuntu-20.04

    steps:
    ### SSH Connect and Docker Image Pull and Container Run
    - name: Docker Image Pull and Container Run
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          docker stop moin-was
          docker rm moin-was
          docker image rm ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPONAME }}
          docker run -d —-net moin —-ip 172.20.0.3 -p 8000:8000 --name moin-was ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPONAME }}
